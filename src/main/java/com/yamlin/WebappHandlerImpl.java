//
// This file is generated by parsec-rdl-gen (development version)
// WILL NOT be auto-generated if file has already existed.
//
package com.yamlin;

import com.yamlin.BO.TraderBO;
import com.yamlin.BO.TransactionBO;
import com.yamlin.parsec_generated.*;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.util.List;

/**
 * WebappHandlerImpl is interface implementation that implement WebappHandler interface.
 */
public class WebappHandlerImpl implements WebappHandler {
    @Inject private TransactionBO transactionBO;
    @Inject private TraderBO traderBO;

    @Override
    public TraderList getTraders(ResourceContext context, String q, Long offset, Integer count, String orderBy) {
        TraderList traderList = new TraderList();
        traderList.setTraders(traderBO.getTrader(q, offset, count, orderBy));
        traderList.setCount(traderList.getTraders().size());
        traderList.setNextOffset(offset+traderList.getTraders().size());
        return traderList;
    }

    @Override
    public TransactionResult getTransactions(ResourceContext context, String q, String op, String sinceId, Integer count, String orderBy) {
        TransactionResult result = new TransactionResult();
        if (op != null && !op.isEmpty()) {
            result.setSummary(transactionBO.getTransactions(q, op));
        } else {
            TransactionList l = new TransactionList();
            List<Transaction> transactionList = transactionBO.getTransactions(q, sinceId, count, orderBy);
            l.setTransactions(transactionList);
            l.setCount(transactionList.size());
            if (transactionList.size() > 0) {
                l.setSinceId(transactionList.get(transactionList.size()-1).getId());
            }
            result.setTransactions(l);
        }
        return result;
    }

    @Override
    public ResourceContext newResourceContext(HttpServletRequest request, HttpServletResponse response) {
        return new DefaultResourceContext(request, response);
    }
}
